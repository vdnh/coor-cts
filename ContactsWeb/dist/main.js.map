{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/contacts/contacts.service.ts","webpack:///./src/app/detail-contact/detail-contact.component.css","webpack:///./src/app/detail-contact/detail-contact.component.html","webpack:///./src/app/detail-contact/detail-contact.component.ts","webpack:///./src/app/detail-shipper/detail-shipper.component.css","webpack:///./src/app/detail-shipper/detail-shipper.component.html","webpack:///./src/app/detail-shipper/detail-shipper.component.ts","webpack:///./src/app/detail-transporter/detail-transporter.component.css","webpack:///./src/app/detail-transporter/detail-transporter.component.html","webpack:///./src/app/detail-transporter/detail-transporter.component.ts","webpack:///./src/app/new-shipper/new-shipper.component.css","webpack:///./src/app/new-shipper/new-shipper.component.html","webpack:///./src/app/new-shipper/new-shipper.component.ts","webpack:///./src/app/new-transporter/new-transporter.component.css","webpack:///./src/app/new-transporter/new-transporter.component.html","webpack:///./src/app/new-transporter/new-transporter.component.ts","webpack:///./src/app/nouveau-contact/nouveau-contact.component.css","webpack:///./src/app/nouveau-contact/nouveau-contact.component.html","webpack:///./src/app/nouveau-contact/nouveau-contact.component.ts","webpack:///./src/app/shippers/shippers.component.css","webpack:///./src/app/shippers/shippers.component.html","webpack:///./src/app/shippers/shippers.component.ts","webpack:///./src/app/shippers/shippers.service.ts","webpack:///./src/app/transporters/transporters.component.css","webpack:///./src/app/transporters/transporters.component.html","webpack:///./src/app/transporters/transporters.component.ts","webpack:///./src/app/transporters/transporters.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/model.contact.ts","webpack:///./src/model/model.shipper.ts","webpack:///./src/model/model.transporter.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          A propos\\n        </div>\\n        <div><p><strong>{{infos.nom}}</strong></p>\\n          <p>Email:  <strong>{{infos.email}}</strong></p>\\n        </div>\\n      </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  infos={\n    nom : \"Infos\",\n    email :  \"sosprestige@cts.com\"\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n  <button routerLink=\\\"/shippers\\\" class=\\\"btn btn-primary\\\">Shippers</button>\\n  <button routerLink=\\\"/new-shipper\\\" class=\\\"btn btn-primary\\\">Nouveau Shipper</button>\\n  <button routerLink=\\\"/contacts\\\" class=\\\"btn btn-primary\\\">Contacts</button>\\n  <button routerLink=\\\"/nouveau-contact\\\" class=\\\"btn btn-primary\\\">Nouveau Contact</button>\\n  <button routerLink=\\\"/transporters\\\" class=\\\"btn btn-primary\\\">Transporters</button>\\n  <button routerLink=\\\"/new-transporter\\\" class=\\\"btn btn-primary\\\">Nouveau Transporter</button>\\n  <button routerLink=\\\"/about\\\" class=\\\"btn btn-primary\\\">About</button>\\n  <!--div>\\n      <table>\\n          <tr><td> sdijfsdojfosjdfopjsop</td>td> sdijfsdojfosjdfopjsop</td></tr>\\n          <tr><td>jdjeopwufdjvkljs</td>td> sdijfsdojfosjdfopjsop</td></tr>\\n        </table>\\n  </div-->\\n  \\n  \\n  <!-- table class=\\\"table table-striped\\\">\\n    <tr>\\n      <td><button routerLink=\\\"/shippers\\\" class=\\\"btn btn-primary\\\">Shippers</button></td>\\n      <td><button routerLink=\\\"/contacts\\\" class=\\\"btn btn-primary\\\">Contacts</button></td>\\n      <td><button routerLink=\\\"/new-transporter\\\" class=\\\"btn btn-primary\\\">Nouveau Transporter</button></td>\\n      <td><button routerLink=\\\"/about\\\" class=\\\"btn btn-primary\\\">About</button></td>\\n    </tr>\\n    <tr>\\n        <td<button routerLink=\\\"/new-shipper\\\" class=\\\"btn btn-primary\\\">Nouveau Shipper</button>></td>\\n        <td>button routerLink=\\\"/nouveau-contact\\\" class=\\\"btn btn-primary\\\">Nouveau Contact</button></td>\\n        <td><button routerLink=\\\"/about\\\" class=\\\"btn btn-primary\\\">About</button></td>\\n        <td></td>\\n      </tr>\\n  </table -->\\n</div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TransportersWeb';\n  contact={nom : \"CTS\", email : \"sosprestige@cts.com\"}\n  textIn : String = \"test first\"; \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\n\nimport { ContactsComponent } from './contacts/contacts.component';\nimport {ContactsService} from './contacts/contacts.service';\nimport { NouveauContactComponent } from './nouveau-contact/nouveau-contact.component';\nimport { DetailContactComponent } from './detail-contact/detail-contact.component';\n\nimport { TransportersComponent } from './transporters/transporters.component'\nimport { TransportersService } from './transporters/transporters.service';\nimport { DetailTransporterComponent } from './detail-transporter/detail-transporter.component';\nimport { NewTransporterComponent } from './new-transporter/new-transporter.component';\nimport { ShippersComponent } from './shippers/shippers.component';\nimport { DetailShipperComponent } from './detail-shipper/detail-shipper.component';\nimport { NewShipperComponent } from './new-shipper/new-shipper.component';\nimport { ShippersService } from './shippers/shippers.service';\n\nconst appRoutes: Routes = [\n  {path: 'about', component: AboutComponent},\n  {path: 'contacts', component: ContactsComponent},\n  {path: 'nouveau-contact', component:  NouveauContactComponent},\n  {path: 'detail-contact/:id', component:  DetailContactComponent},\n  {path: 'transporters', component: TransportersComponent},\n  {path: 'new-transporter', component:  NewTransporterComponent},\n  {path: 'detail-transporter/:id', component:  DetailTransporterComponent},\n  {path: 'shippers', component: ShippersComponent},\n  {path: 'new-shipper', component:  NewShipperComponent},\n  {path: 'detail-shipper/:id', component:  DetailShipperComponent},\n  {path: '', redirectTo: '/about', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactsComponent,\n    AboutComponent,\n    NouveauContactComponent,\n    DetailContactComponent,\n    TransportersComponent,\n    DetailTransporterComponent,\n    NewTransporterComponent,\n    ShippersComponent,\n    DetailShipperComponent,\n    NewShipperComponent\n  ],\n  imports: [\n    BrowserModule, RouterModule.forRoot(appRoutes), HttpModule, FormsModule\n  ],\n  providers: [ContactsService, TransportersService, ShippersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RzL2NvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">Liste des Contacts</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Mot cle : \\\"></label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"motCle\\\" #ctrl=\\\"ngModel\\\"/>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"chercher()\\\">Chercher</button>\\n      </div>\\n      <table class=\\\"table table-striped\\\">\\n        <tr>\\n          <th>Nom</th><th>Prenom</th><th>Fonction</th><th>Email</th><th>Telephone</th><th>Edit</th><th>Delete</th>\\n        </tr>\\n        <tr *ngFor=\\\"let c of pageContact.content\\\">\\n            <td>{{c.nom}}</td><td>{{c.prenom}}</td><td>{{c.fonction}}</td><td>{{c.email}}</td><td>{{c.tel}}</td>\\n            <td><a class=\\\"spacer font-size:30px text-decoration:underline\\\" (click)=\\\"gotoDetailContact(c.id)\\\">Edit</a></td>\\n            <td><a (click)=\\\"deleteContact(c.id)\\\">Delete</a></td>\\n        </tr>\\n      </table>\\n      <div class=\\\"container\\\">\\n        <ul class=\\\"nav nav-pills\\\"><strong>page: </strong>\\n          <li *ngFor=\\\"let p of pages; let i=index\\\">\\n            <!-- button (click)=\\\"gotoPage(i)\\\">{{i}}</button -->\\n               <a class=\\\"spacer clickable\\\" (click)=\\\"gotoPage(i)\\\"> {{i}} </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Http} from '@angular/http';\n//import \"rxjs/add/operator/map\";\nimport { map } from 'rxjs/operators';\nimport { ContactsService } from './contacts.service';\nimport { Router } from '@angular/router';\n//import \"ContactsService\";\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  pageContact:any;\n  motCle:string=\"\";\n  currentPage:number=0;\n  size:number=5;\n\n  pages:Array<number>;\n\n  constructor(public http:Http, public contactservice:ContactsService, public router:Router) { }\n\n  ngOnInit() {\n    this.doSearch();\n  }\n\n  doSearch(){\n    this.contactservice.getContacts(this.motCle, this.currentPage, this.size).subscribe(data=>{\n      this.pageContact=data;\n      this.pages=new Array(data.totalPages);\n    }, err=>{\n      console.log(err);\n    })\n  }\n  chercher(){\n    this.doSearch();\n  }\n  gotoPage(i:number){\n    this.currentPage=i;\n    this.doSearch();\n  }\n  gotoDetailContact(id:number){\n    this.router.navigate(['detail-contact',id]);\n  }\n\n  deleteContact(id:number){\n    this.contactservice.deleteContact(id)\n    .subscribe(data=>{\n      //alert(\"Contact Id : \"+id+\" a ete supprime.\");\n    }, err=>{\n      console.log(err);\n    });\n\n    this.gotoPage(this.currentPage);\n    alert(\"Avoir rafraichi apres delete!!\");\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Contact } from \"../../model/model.contact\";\r\n\r\n@Injectable()\r\nexport class ContactsService{\r\n    adServer=\"//192.168.0.131\";\r\n    constructor(public http:Http){\r\n\r\n    }\r\n\r\n    getContacts(motCle:string, page:number, size:number){\r\n        return this.http.get(this.adServer+\":8080/chercherContacts?mc=\"+motCle+\"&size=\"+size+\r\n        \"&page=\"+page)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    contactsDeShipper(id_shipper:number){\r\n        return this.http.get(this.adServer+\":8080/contactsDeShipper?id_shipper=\"+id_shipper)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    saveContacts(contact:Contact){\r\n        return this.http.post(this.adServer+\":8080/contacts\",contact)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    getDetailContact(id:number){\r\n        return this.http.get(this.adServer+\":8080/contacts/\"+id)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    deleteContact(id:number){\r\n        return this.http.delete(this.adServer+\":8080/contacts/\"+id).pipe(map(res=>res.json()));\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1jb250YWN0L2RldGFpbC1jb250YWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==1\\\">\\n      <div class=\\\"panel-heading\\\">Edit contact - ID : {{contact.id}}</div>\\n        <div class=\\\"panel-body\\\">\\n          <div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Nom :</label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.nom\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Prenom :</label>  \\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.prenom\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Fonction:</label>  \\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.fonction\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Email :</label>  \\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.email\\\" />\\n            </div>            \\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Telephone :</label>  \\n                <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"contact.tel\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Photo :</label>  \\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.photo\\\" />\\n            </div>\\n            <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"saveContact()\\\">Ok</button>  \\n                <button class=\\\"btn btn-primary\\\" routerLink=\\\"/contacts\\\">Quit</button></div>\\n        </div>\\n        </div>   \\n  </div>\\n\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==2\\\">\\n        <div class=\\\"panel-heading\\\">Confirmation</div>\\n          <div class=\\\"panel-body\\\">\\n            <div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Nom :</label>  \\n                <label >{{contact.nom}}</label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Prenom :</label>  \\n                  <label >{{contact.prenom}}</label>\\n              </div>              \\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Fonction :</label>  \\n                  <label >{{contact.fonction}}</label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Email :</label>  \\n                <label >{{contact.email}}</label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Telephone :</label>  \\n                  <label >{{contact.tel}}</label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Photo :</label>  \\n                  <label >{{contact.photo}}</label>\\n              </div>\\n              <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"mode=1\\\" routerLink=\\\"/contacts\\\">Ok</button></div>\\n            </div>\\n          </div>   \\n    </div>\\n\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Contact } from '../../model/model.contact';\nimport { ContactsService } from '../contacts/contacts.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Alert } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-detail-contact',\n  templateUrl: './detail-contact.component.html',\n  styleUrls: ['./detail-contact.component.css']\n})\nexport class DetailContactComponent implements OnInit {\n\n  contact:Contact=new Contact();\n  //contact:any;\n  id:number;\n  mode:number=1;\n  //constructor(public contacsService:ContactsService) { }\n  constructor(public activatedRoute:ActivatedRoute, public contactsService:ContactsService){    \n    this.id=activatedRoute.snapshot.params['id'];\n    //console.log(activatedRoute.snapshot.params.id);\n  }\n\n  ngOnInit() {\n    this.contactsService.getDetailContact(this.id).subscribe(data=>{\n      this.contact=data;\n      this.mode=1;\n    }, err=>{\n      console.log(err);\n    })\n  }\n  saveContact(){\n    this.contactsService.saveContacts(this.contact).subscribe(data=>{\n      alert(\"Mise a jour.\");\n      this.mode=2;\n      //console.log(data);\n    }, err=>{\n      console.log(err);\n    })    \n    //console.log(this.contact);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1zaGlwcGVyL2RldGFpbC1zaGlwcGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==1\\\">\\n      <div class=\\\"panel-heading\\\">Edit Shipper - ID : {{shipper.id}}</div>\\n        <div class=\\\"panel-body\\\">\\n                <table class=\\\"table table-striped\\\">\\n                        <tr>\\n                          <th>Nom</th><th>Raison Sociale</th><th>En Affaire Depuis</th><th>Email</th><th>Telephone</th><th>Fax</th><th>Photo</th>\\n                        </tr>\\n                        <tr>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.nom\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.raison_sociale\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"shipper.depuis\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.email\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.tel\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.fax\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.photo\\\" /></td>\\n                        </tr>\\n                        <tr><td colspan=\\\"2\\\"><strong>Adresse</strong></td></tr>\\n                        <tr><td colspan=\\\"2\\\">Ca s'en vient</td></tr>\\n                        <tr><td colspan=\\\"2\\\"><strong>Personnes a contact</strong></td></tr>\\n                        <tr>\\n                          <th>Nom</th><th>Prenom</th><th>Fonction</th><th>Email</th><th>Telephone</th><th>Fax</th><th>Photo</th>\\n                        </tr>\\n                        <tr *ngFor=\\\"let contact of contacts\\\">\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.nom\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.prenom\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.fonction\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.email\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.tel\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.fax\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.photo\\\" /></td>\\n                        </tr>        \\n                </table>            \\n         \\n            <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"saveShipper()\\\">Ok</button>  \\n                <button class=\\\"btn btn-primary\\\" routerLink=\\\"/shippers\\\">Quit</button></div>\\n        <!--/div-->\\n        </div>   \\n  </div>\\n  \\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==2\\\">\\n        <div class=\\\"panel-heading\\\">Confirmation</div>\\n          <div class=\\\"panel-body\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                    <th>Nom</th><th>Raison Sociale</th><th>En Affaire Depuis</th><th>Email</th><th>Telephone</th><th>Fax</th><th>Photo</th>\\n                </tr>\\n                <tr>\\n                    <td>{{shipper.nom}}</td><td>{{shipper.raison_sociale}}</td><td>{{shipper.depuis}}</td><td>{{shipper.email}}</td><td>{{shipper.tel}}</td><td>{{shipper.fax}}</td><td>{{shipper.photo}}</td>\\n                </tr>\\n                <tr><td colspan=\\\"2\\\"><strong>Adresse</strong></td></tr>\\n                <tr><td colspan=\\\"2\\\">Ca s'en vient</td></tr>\\n                <tr><td colspan=\\\"2\\\"><strong>Personnes a contact</strong></td></tr>\\n                <tr>\\n                    <th>Nom</th><th>Prenom</th><th>Fonction</th><th>Email</th><th>Telephone</th><th>Fax</th>\\n                </tr>\\n                <tr *ngFor=\\\"let contact of contacts\\\">\\n                    <td>{{contact.nom}}</td><td>{{contact.prenom}}</td><td>{{contact.fonction}}</td><td>{{contact.email}}</td><td>{{contact.tel}}</td><td>{{contact.fax}}</td>\\n                </tr>                \\n            </table>\\n                <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"mode=1\\\" routerLink=\\\"/shippers\\\">Ok</button></div>\\n            <!--/div-->\\n          </div>   \\n    </div>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Shipper } from '../../model/model.shipper';\nimport { ShippersService } from '../shippers/shippers.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Alert } from 'selenium-webdriver';\nimport { Contact } from 'src/model/model.contact';\nimport { ContactsService } from '../contacts/contacts.service';\nimport { forEach } from '@angular/router/src/utils/collection';\n\n@Component({\n  selector: 'app-detail-shipper',\n  templateUrl: './detail-shipper.component.html',\n  styleUrls: ['./detail-shipper.component.css']\n})\nexport class DetailShipperComponent implements OnInit {\n\n  shipper:Shipper=new Shipper();\n  id:number;\n  mode:number=1;\n  contacts:Array<Contact>;\n  constructor(public activatedRoute:ActivatedRoute, public shippersService:ShippersService, public contactsService:ContactsService){    \n    this.id=activatedRoute.snapshot.params['id'];\n  }\n\n  ngOnInit() {\n    this.shippersService.getDetailShipper(this.id).subscribe(data=>{\n      this.shipper=data;\n      this.mode=1;\n    }, err=>{\n      console.log(err);\n    });\n    this.contactsService.contactsDeShipper(this.id).subscribe(data=>{\n      this.contacts=data;\n    }, err=>{\n      console.log(err);\n    })\n  }\n  saveShipper(){\n    this.shippersService.saveShippers(this.shipper).subscribe(data=>{\n      alert(\"Mise a jour.\");\n      this.mode=2;\n    }, err=>{\n      console.log(err);\n    });\n    this.contacts.forEach(obj => {\n      this.contactsService.saveContacts(obj);\n      console.log(\"contact name:  \"+obj.nom);\n    });    \n    for(let c of this.contacts){\n      this.contactsService.saveContacts(c);\n      console.log(\"contact name:  \"+c.nom);\n   }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC10cmFuc3BvcnRlci9kZXRhaWwtdHJhbnNwb3J0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==1\\\">\\n    <div class=\\\"panel-heading\\\">Edit transporter - ID : {{transporter.id}}</div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nom :</label>  \\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.nom\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Raison Sociale :</label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.raison_sociale\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">En Affaire Depuis:</label>  \\n              <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"transporter.depuis\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Email :</label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.email\\\" />\\n          </div>            \\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telephone :</label>  \\n              <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"transporter.tel\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Photo :</label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.photo\\\" />\\n          </div>\\n          <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"saveTransporter()\\\">Ok</button>  \\n              <button class=\\\"btn btn-primary\\\" routerLink=\\\"/transporters\\\">Quit</button></div>\\n      </div>\\n      </div>   \\n</div>\\n\\n<div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==2\\\">\\n      <div class=\\\"panel-heading\\\">Confirmation</div>\\n        <div class=\\\"panel-body\\\">\\n          <div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Nom :</label>  \\n              <label >{{transporter.nom}}</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Prenom :</label>  \\n                <label >{{transporter.raison_sociale}}</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Email :</label>  \\n                <label >{{transporter.email}}</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">En Affaire Depuis :</label>  \\n                <label >{{transporter.depuis}}</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Telephone :</label>  \\n                <label >{{transporter.tel}}</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Photo :</label>  \\n                <label >{{transporter.photo}}</label>\\n            </div>\\n            <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"mode=1\\\" routerLink=\\\"/transporters\\\">Ok</button></div>\\n          </div>\\n        </div>   \\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Transporter } from '../../model/model.transporter';\nimport { TransportersService } from '../transporters/transporters.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Alert } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-detail-transoprter',\n  templateUrl: './detail-transporter.component.html',\n  styleUrls: ['./detail-transporter.component.css']\n})\nexport class DetailTransporterComponent implements OnInit {\n\n  transporter:Transporter=new Transporter();\n  id:number;\n  mode:number=1;\n  constructor(public activatedRoute:ActivatedRoute, public transportersService:TransportersService){    \n    this.id=activatedRoute.snapshot.params['id'];\n  }\n\n  ngOnInit() {\n    this.transportersService.getDetailTransporter(this.id).subscribe(data=>{\n      this.transporter=data;\n      this.mode=1;\n    }, err=>{\n      console.log(err);\n    })\n  }\n  saveContact(){\n    this.transportersService.saveTransporters(this.transporter).subscribe(data=>{\n      alert(\"Mise a jour.\");\n      this.mode=2;\n    }, err=>{\n      console.log(err);\n    })    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1zaGlwcGVyL25ldy1zaGlwcGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==1\\\">\\n      <div class=\\\"panel-heading\\\"><strong> Nouveau Shipper </strong></div>\\n        <div class=\\\"panel-body\\\">\\n                <table class=\\\"table table-striped\\\">\\n                        <tr>\\n                          <th>Nom</th><th>Raison Sociale</th><th>En Affaire Depuis</th><th>Email</th><th>Telephone</th><th>Fax</th><th>Photo</th>\\n                        </tr>\\n                        <tr>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.nom\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.raison_sociale\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"shipper.depuis\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.email\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.tel\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.fax\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"shipper.photo\\\" /></td>\\n                        </tr>\\n                        <tr><td colspan=\\\"2\\\"><strong>Adresse</strong></td></tr>\\n                        <tr><td colspan=\\\"2\\\">Ca s'en vient</td></tr>\\n                        <tr><td colspan=\\\"2\\\"><strong>Personne principal a contact</strong></td></tr>\\n                        <tr>\\n                          <th>Nom</th><th>Prenom</th><th>Fonction</th><th>Email</th><th>Telephone</th><th>Fax</th><th>Photo</th>\\n                        </tr>\\n                        <tr>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.nom\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.prenom\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.fonction\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.email\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.tel\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.fax\\\" /></td>\\n                          <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.photo\\\" /></td>\\n                        </tr>        \\n                </table>          \\n      \\n            <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"saveShipper()\\\">Save</button></div>\\n        </div>   \\n  </div>\\n  \\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==2\\\">\\n      <div class=\\\"panel-heading\\\"><strong>Confirmation</strong></div>\\n      <table class=\\\"table table-striped\\\">\\n        <tr>\\n          <th>Nom</th><th>Raison Sociale</th><th>Email</th><th>Telephone</th><th>Fax</th>\\n        </tr>\\n        <tr>\\n          <td>{{shipper.nom}}</td><td>{{shipper.raison_sociale}}</td><td>{{shipper.email}}</td><td>{{shipper.tel}}</td><td>{{shipper.fax}}</td>\\n        </tr>\\n        <tr><td colspan=\\\"2\\\"><strong>Adresse</strong></td></tr>\\n        <tr><td colspan=\\\"2\\\">Ca s'en vient</td></tr>\\n        <tr><td colspan=\\\"2\\\"><strong>Personne principal a contact</strong></td></tr>\\n        <tr>\\n          <th>Nom</th><th>Prenom</th><th>Fonction</th><th>Email</th><th>Telephone</th><th>Fax</th>\\n        </tr>\\n        <tr>\\n          <td>{{contact.nom}}</td><td>{{contact.prenom}}</td><td>{{contact.fonction}}</td><td>{{contact.email}}</td><td>{{contact.tel}}</td><td>{{contact.fax}}</td>\\n        </tr>        \\n      </table>\\n        <div class=\\\"panel-body\\\">\\n          <div>\\n            \\n            <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"mode=1\\\">Nouveau Shipper</button></div>\\n          </div>\\n        </div>   \\n  </div>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Shipper } from 'src/model/model.shipper';\nimport { ShippersService } from '../shippers/shippers.service';\nimport { ContactsService } from '../contacts/contacts.service';\nimport { Contact } from 'src/model/model.contact';\n\n@Component({\n  selector: 'app-new-shipper',\n  templateUrl: './new-shipper.component.html',\n  styleUrls: ['./new-shipper.component.css']\n})\nexport class NewShipperComponent implements OnInit {\n  shipper:Shipper=new Shipper();\n  mode:number=1;\n  contact:Contact=new Contact();\n  constructor(public shippersService:ShippersService, public contactsService:ContactsService) { }\n\n  ngOnInit() {\n  }\n\n  saveShipper(){\n    this.shippersService.saveShippers(this.shipper).subscribe(data=>{\n      this.mode=2;\n      this.shipper=data;\n      this.contact.id_shipper=this.shipper.id;\n      console.log(\"id actual of shipper : \"+this.shipper.id);\n      console.log(\"idShipper of contact : \"+this.contact.id_shipper);\n      console.log(\"This Contact all info : \"+this.contact.toString());\n      this.saveContact();\n    }, err=>{\n      console.log(err);\n    });\n    //this.saveContact();\n    /*\n    this.contactsService.saveContacts(this.contact).subscribe(data=>{\n      console.log(\"Contact before : \"+this.contact)  \n      console.log(\"idShipper before : \"+this.contact.idShipper)  \n      //this.contact=data;\n      console.log(\"Contact after : \"+this.contact)\n      console.log(\"idShipper after : \"+this.contact.idShipper);\n    });//*/\n  }\n\n  saveContact(){\n    this.contactsService.saveContacts(this.contact).subscribe(data1=>{\n      //this.mode=2;\n      //console.log(data);\n    }, err=>{\n      console.log(err);\n    })    \n    //console.log(this.contact);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy10cmFuc3BvcnRlci9uZXctdHJhbnNwb3J0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==1\\\">\\n    <div class=\\\"panel-heading\\\">Nouveau Transporter</div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nom : </label>  \\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.nom\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Raison Social : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.raison_sociale\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Email : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.email\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">En Affaire Depuis : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"transporter.depuis\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telephone : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"transporter.tel\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Photo : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transporter.photo\\\" />\\n          </div>\\n          <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"saveTransporter()\\\" >Save</button></div>\\n        </div>\\n      </div>   \\n</div>\\n\\n<div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==2\\\">\\n    <div class=\\\"panel-heading\\\">Confirmation</div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nom : </label>  \\n            <label >{{transporter.nom}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Raison Social : </label>  \\n              <label >{{transporter.raison_sociale}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Email : </label>  \\n              <label >{{transporter.email}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">En Affaire Depuis : </label>  \\n              <label >{{transporter.depuis}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telephone : </label>  \\n              <label >{{transporter.tel}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Photo : </label>  \\n              <label >{{transporter.photo}}</label>\\n          </div>\\n          <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"mode=1\\\">Nouveau Transporter</button></div>\\n        </div>\\n      </div>   \\n</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Transporter } from 'src/model/model.transporter';\nimport { TransportersService } from '../transporters/transporters.service';\n\n@Component({\n  selector: 'app-new-transporter',\n  templateUrl: './new-transporter.component.html',\n  styleUrls: ['./new-transporter.component.css']\n})\nexport class NewTransporterComponent implements OnInit {\n  transporter:Transporter=new Transporter();\n  mode:number=1;\n  \n  constructor(public transportersService:TransportersService) { }\n\n  ngOnInit() {\n  }\n\n  saveTransporter(){\n    this.transportersService.saveTransporters(this.transporter).subscribe(data=>{\n      this.mode=2;\n    }, err=>{\n      console.log(err);\n    })    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdXZlYXUtY29udGFjdC9ub3V2ZWF1LWNvbnRhY3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==1\\\">\\n    <div class=\\\"panel-heading\\\">Nouveau Contact</div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nom : </label>  \\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.nom\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Prenom : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.prenom\\\" />\\n          </div>          \\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Fonction : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.fonction\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Email : </label>  \\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.email\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telephone : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"contact.tel\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Photo : </label>  \\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"contact.photo\\\" />\\n          </div>\\n          <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"saveContact()\\\" >Save</button></div>\\n        </div>\\n      </div>   \\n</div>\\n\\n<div class=\\\"panel panel-primary\\\" *ngIf=\\\"mode==2\\\">\\n    <div class=\\\"panel-heading\\\">Confirmation</div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nom : </label>  \\n            <label >{{contact.nom}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Prenom : </label>  \\n              <label >{{contact.prenom}}</label>\\n          </div>          \\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Fonction : </label>  \\n              <label >{{contact.fonction}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Email : </label>  \\n            <label >{{contact.email}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telephone : </label>  \\n              <label >{{contact.tel}}</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Photo : </label>  \\n              <label >{{contact.photo}}</label>\\n          </div>\\n          <div> <button class=\\\"btn btn-primary\\\" (click)=\\\"mode=1\\\">Nouveau Contact</button></div>\\n        </div>\\n      </div>   \\n</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EmailValidator } from '@angular/forms';\nimport { Contact } from '../../model/model.contact';\nimport {ContactsService} from \"../contacts/contacts.service\";\n\n@Component({\n  selector: 'app-nouveau-contact',\n  templateUrl: './nouveau-contact.component.html',\n  styleUrls: ['./nouveau-contact.component.css']\n})\nexport class NouveauContactComponent implements OnInit {\n\n  contact:Contact=new Contact();\n  mode:number=1;\n  \n  constructor(public contactsService:ContactsService) { }\n\n  ngOnInit() {\n  }\n\n  saveContact(){\n    this.contactsService.saveContacts(this.contact).subscribe(data=>{\n      this.mode=2;\n      //console.log(data);\n    }, err=>{\n      console.log(err);\n    })    \n    //console.log(this.contact);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoaXBwZXJzL3NoaXBwZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">Liste des Shippers</div>\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Mot cle : \\\"></label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"motCle\\\" #ctrl=\\\"ngModel\\\"/>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"chercher()\\\">Chercher</button>\\n        </div>\\n        <table class=\\\"table table-striped\\\">\\n          <tr>\\n            <th>Nom</th><th>Raison Sociale</th><th>Email</th><th>Telephone</th><th>Fax</th><th>Edit</th><th>Delete</th>\\n          </tr>\\n          <tr *ngFor=\\\"let t of pageShipper.content\\\">\\n              <td>{{t.nom}}</td><td>{{t.raison_sociale}}</td><td>{{t.email}}</td><td>{{t.tel}}</td><td>{{t.fax}}</td>\\n              <td><a class=\\\"spacer font-size:30px text-decoration:underline\\\" (click)=\\\"gotoDetailShipper(t.id)\\\">Edit</a></td>\\n              <td><a (click)=\\\"deleteShipper(t.id)\\\">Delete</a></td>\\n          </tr>\\n        </table>\\n        <div class=\\\"container\\\">\\n          <ul class=\\\"nav nav-pills\\\"><strong>page: </strong>\\n            <li *ngFor=\\\"let p of pages; let i=index\\\">\\n                 <a class=\\\"spacer clickable\\\" (click)=\\\"gotoPage(i)\\\"> <strong>{{i}}</strong> </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {Http} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { ShippersService } from './shippers.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shippers',\n  templateUrl: './shippers.component.html',\n  styleUrls: ['./shippers.component.css']\n})\nexport class ShippersComponent implements OnInit {\n\n  pageShipper:any;\n  motCle:string=\"\";\n  currentPage:number=0;\n  size:number=5;\n\n  pages:Array<number>;\n\n  constructor(public http:Http, public shipperservice:ShippersService, public router:Router) { }\n\n  ngOnInit() {\n    this.doSearch();\n  }\n\n  doSearch(){\n    this.shipperservice.getShippers(this.motCle, this.currentPage, this.size).subscribe(data=>{\n      this.pageShipper=data;\n      this.pages=new Array(data.totalPages);\n    }, err=>{\n      console.log(err);\n    })\n  }\n  chercher(){\n    this.doSearch();\n  }\n  gotoPage(i:number){\n    this.currentPage=i;\n    this.doSearch();\n  }\n  gotoDetailShipper(id:number){\n    this.router.navigate(['detail-shipper',id]);\n  }\n\n  deleteTransporter(id:number){\n    this.shipperservice.deleteShipper(id)\n    .subscribe(data=>{\n    }, err=>{\n      console.log(err);\n    });\n\n    this.gotoPage(this.currentPage);\n    alert(\"Avoir rafraichi apres delete!!\");\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Shipper } from \"../../model/model.shipper\";\r\n\r\n@Injectable()\r\nexport class ShippersService{\r\n    adServer=\"//192.168.0.131\";\r\n    constructor(public http:Http){\r\n\r\n    }\r\n\r\n    getShippers(motCle:string, page:number, size:number){\r\n        return this.http.get(this.adServer+\":8080/chercherShippers?mc=\"+motCle+\"&size=\"+size+\r\n        \"&page=\"+page)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    saveShippers(shipper:Shipper){\r\n        return this.http.post(this.adServer+\":8080/shippers\",shipper)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    getDetailShipper(id:number){\r\n        return this.http.get(this.adServer+\":8080/shippers/\"+id)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    deleteShipper(id:number){\r\n        return this.http.delete(this.adServer+\":8080/shippers/\"+id).pipe(map(res=>res.json()));\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydGVycy90cmFuc3BvcnRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container spacer\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">Liste des transporters</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Mot cle : \\\"></label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"motCle\\\" #ctrl=\\\"ngModel\\\"/>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"chercher()\\\">Chercher</button>\\n      </div>\\n      <table class=\\\"table table-striped\\\">\\n        <tr>\\n          <th>Nom</th><th>Raison Sociale</th><th>Email</th><th>Telephone</th><th>Edit</th><th>Delete</th>\\n        </tr>\\n        <tr *ngFor=\\\"let t of pageTransporter.content\\\">\\n            <td>{{t.nom}}</td><td>{{t.raison_sociale}}</td><td>{{t.email}}</td><td>{{t.tel}}</td>\\n            <td><a class=\\\"spacer font-size:30px text-decoration:underline\\\" (click)=\\\"gotoDetailTransporter(t.id)\\\">Edit</a></td>\\n            <td><a (click)=\\\"deleteTransporter(t.id)\\\">Delete</a></td>\\n        </tr>\\n      </table>\\n      <div class=\\\"container\\\">\\n        <ul class=\\\"nav nav-pills\\\"><strong>page: </strong>\\n          <li *ngFor=\\\"let p of pages; let i=index\\\">\\n               <a class=\\\"spacer clickable\\\" (click)=\\\"gotoPage(i)\\\"> <strong>{{i}}</strong> </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Http} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { TransportersService } from './transporters.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-transporters',\n  templateUrl: './transporters.component.html',\n  styleUrls: ['./transporters.component.css']\n})\nexport class TransportersComponent implements OnInit {\n\n  pageTransporter:any;\n  motCle:string=\"\";\n  currentPage:number=0;\n  size:number=5;\n\n  pages:Array<number>;\n\n  constructor(public http:Http, public transporterservice:TransportersService, public router:Router) { }\n\n  ngOnInit() {\n    this.doSearch();\n  }\n\n  doSearch(){\n    this.transporterservice.getTransporters(this.motCle, this.currentPage, this.size).subscribe(data=>{\n      this.pageTransporter=data;\n      this.pages=new Array(data.totalPages);\n    }, err=>{\n      console.log(err);\n    })\n  }\n  chercher(){\n    this.doSearch();\n  }\n  gotoPage(i:number){\n    this.currentPage=i;\n    this.doSearch();\n  }\n  gotoDetailTransporter(id:number){\n    this.router.navigate(['detail-transporter',id]);\n  }\n\n  deleteTransporter(id:number){\n    this.transporterservice.deleteTransporter(id)\n    .subscribe(data=>{\n    }, err=>{\n      console.log(err);\n    });\n\n    this.gotoPage(this.currentPage);\n    alert(\"Avoir rafraichi apres delete!!\");\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Transporter } from \"../../model/model.transporter\";\r\n\r\n@Injectable()\r\nexport class TransportersService{\r\n    adServer=\"//192.168.0.131\";\r\n    constructor(public http:Http){\r\n\r\n    }\r\n\r\n    getTransporters(motCle:string, page:number, size:number){\r\n        return this.http.get(this.adServer+\":8080/chercherTransporters?mc=\"+motCle+\"&size=\"+size+\r\n        \"&page=\"+page)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    saveTransporters(transporter:Transporter){\r\n        return this.http.post(this.adServer+\":8080/transporters\",transporter)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    getDetailTransporter(id:number){\r\n        return this.http.get(this.adServer+\":8080/transporters/\"+id)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n    deleteTransporter(id:number){\r\n        return this.http.delete(this.adServer+\":8080/transporters/\"+id).pipe(map(res=>res.json()));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","export class Contact{\r\n    id:number=0;\r\n    nom:string=\"\";\r\n    prenom:string=\"\";    \r\n    fonction:string=\"\";\r\n    email:string=\"\";\r\n    tel:number=0;\r\n    fax:number=0;\r\n    photo:string=\"\";\r\n    id_shipper:number=0;\r\n    id_transporter:number=0;\r\n    id_manager:number=0;\r\n}","export class Shipper{\r\n    id:number;\r\n    nom:string=\"\";\r\n    raison_sociale:string=\"\";\r\n    email:string=\"\";\r\n    depuis:Date;\r\n    tel:number=0;\r\n    fax:number=0;\r\n    photo:string=\"\";\r\n}","export class Transporter{\r\n    id:number;\r\n    nom:string=\"\";\r\n    raison_sociale:string=\"\";\r\n    email:string=\"\";\r\n    depuis:Date;\r\n    tel:number=0;\r\n    fax:number=0;\r\n    photo:string=\"\";\r\n}"],"sourceRoot":""}